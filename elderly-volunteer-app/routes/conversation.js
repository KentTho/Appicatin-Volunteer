const express = require("express");
const router = express.Router();
const Conversation = require("../models/Conversation");
const Message = require("../models/Message");
const { authenticate } = require("../middleware/authMiddleware");

// üü¢ L·∫•y danh s√°ch h·ªôi tho·∫°i c·ªßa user
router.get("/", authenticate, async (req, res) => {
  try {
    const conversations = await Conversation.find({
      participants: req.user._id,
    })
      .populate("participants", "name email avatar")
      .populate("lastMessage");

    res.status(200).json({ conversations });
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y danh s√°ch h·ªôi tho·∫°i:", error);
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch h·ªôi tho·∫°i." });
  }
});

// üü† X√≥a m·ªôt cu·ªôc h·ªôi tho·∫°i
router.delete("/:conversationId", authenticate, async (req, res) => {
  try {
    const { conversationId } = req.params;

    const conversation = await Conversation.findById(conversationId);
    if (!conversation) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y h·ªôi tho·∫°i." });
    }

    if (!conversation.participants.includes(req.user._id)) {
      return res
        .status(403)
        .json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn x√≥a h·ªôi tho·∫°i n√†y." });
    }

    await Message.deleteMany({ conversationId }); // X√≥a t·∫•t c·∫£ tin nh·∫Øn trong h·ªôi tho·∫°i
    await Conversation.findByIdAndDelete(conversationId); // X√≥a h·ªôi tho·∫°i

    res.status(200).json({ message: "H·ªôi tho·∫°i ƒë√£ ƒë∆∞·ª£c x√≥a." });
  } catch (error) {
    console.error("‚ùå L·ªói khi x√≥a h·ªôi tho·∫°i:", error);
    res.status(500).json({ message: "L·ªói khi x√≥a h·ªôi tho·∫°i." });
  }
});

module.exports = router;
